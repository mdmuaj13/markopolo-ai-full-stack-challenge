services:
  redis:
    image: redis:7-alpine
    container_name: marko-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: marko-server
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: marko-celery-worker
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
    command: celery -A src.celery_app.celery_app worker --loglevel=info

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    container_name: marko-client
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  redis-data:
